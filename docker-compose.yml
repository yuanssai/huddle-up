version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: huddle-up-db
    environment:
      POSTGRES_DB: huddle_up
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - huddle-up-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Node.js Server
  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: huddle-up-server
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: huddle_up
      DB_USER: postgres
      DB_PASSWORD: password123
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 24h
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - huddle-up-network
    volumes:
      - ./server:/app
      - /app/node_modules
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 10 &&
        echo 'Initializing database...' &&
        npm run init-db &&
        echo 'Starting server...' &&
        npm start
      "

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: huddle-up-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@huddleup.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - huddle-up-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  huddle-up-network:
    driver: bridge 